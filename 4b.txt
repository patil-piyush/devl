# %%
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report

df = pd.read_csv("diabetes.csv")

df.head()

# %%
X = df.drop('Outcome', axis=1) 
y = df['Outcome']  

# %%
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

model = LogisticRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

# %%
accuracy = accuracy_score(y_test, y_pred)

print(f"Accuracy: {accuracy:.2f}")

# %%
precision = precision_score(y_test, y_pred)

print(f"Precision: {precision:.2f}")

# %%
recall = recall_score(y_test, y_pred)

print(f"Recall: {recall:.2f}")

# %%
f1 = f1_score(y_test, y_pred)

print(f"F1 Score: {f1:.2f}")

# %%
conf_matrix = confusion_matrix(y_test, y_pred)

print("Confusion Matrix:")
print(conf_matrix)

# %%
classification_rep = classification_report(y_test, y_pred)

print("Classification Report:")
print(classification_rep)

# %%



